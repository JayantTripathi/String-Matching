The Agile Methodology
	The process of software development is a complex process. Software development life cycle (SDLC) is a series of certain steps which is used during the development of any piece of software's code and it ensures that the effective software is developed. A life cycle's each phase performs a specific task and delivered output to the next phase. There are several models of software development process, which uses different approaches in tasks which is performed in different phase of the cycle. Hamed and Abushama (2013, p. 160) believe that the selection of a software development model is an important task in any software project and it has a great impact on business welfare and customer satisfaction. 
	A software life cycle model consists of different phases of a software development process, each phase is executed in different stage and it produces a deliverable input for the next phase of the life cycle. Analysis, design, code construction, testing, and maintenance are the main stages of a software development life cycle. Client requirements are translated in design diagrams, then the code is constructed according to the design diagram. At the end, the testing team checks the deliverable output of the implementation stage against client requirements. Devi (2013, p. 1) defines the traditional waterfall model as  "hard-system thinking" because developers working in this model think that requirements are well defined. The author also defines the management style of the waterfall model as "high command and control" which is a standard approach with limited amount of the user interaction (p. 3). 
	Agile methodology executes in one to four weeks long periods, which is called as a short sprint. Initially the software development team decided to implement one function. In the final stage, the deliverable code tested and the development team processes further on the basis of feedback from the customer. At every sprint, the project is evaluated and it may change the project direction to meet customer satisfaction more effectively. The customer role is very important for successful completion of the project. This role defines the requirements of the project, task's priority, and it works very closely with all software developers to implement each requirement of the system. However, most of the agile projects do not get proper user involvement because some client resides out of the country, software developers may not train properly to get out information from users. Designing, coding, and testing  are three steps of the agile software development methodology.
	Designing is the first step of a software development process used in the agile methodology. Requirement specifications which are defined in the initial phase from clients are converted into the system and software design. Hardware and system requirements are specified by the system design, and it also helps to design the system architecture which is required for software execution. The software design helps to develop attractive user friendly graphical user interface in order to access a software in real time environment. Furthermore, the interface design helps to determine the operation between different systems and it shows how users interact with a software. For example, Pressman (2001, p. 218) indicates that the software interface helps to understand a flow of the information within a system and a specific type of performance at different stage. The author also noted that the information from the class based model, the behavior model and the flow model serve basis for the component design and it transforms the structural element into a software component's procedural description (p. 218). Thus, the author concludes that software design provides the foundation for all software development activities that follows in a software development life cycle (p. 218). 
	The overall schedule of a project is very hard to make because of fluctuation in user's requirements and change in previous sprint results. Gregorio (2012, p. 2) states that the first phase of the sprint cycle is design, which consists 1-4 weeks as shown in fig 1, but it is highly dependent on the team size and may be it will vary during the project development. As shown in fig 1, after the release of every sprint cycle's output, it will review with the client's requirement and expected outcome. Furthermore, Holtzblatt (2013, para. 1) proves that the contextual design technique is performed in an iterative manner with several rounds and it ensures the right deliverable output is built. The contextual design helps designers work efficiently with developers and to gather client feedback for every iteration of the sprint cycle (Holtzblatt, 2013, para. 6).
	Aitken and Ilango (2013, p. 4754) believe that the agile software development mainly focuses on iteratively and incremental delivery of the business value. As a result, project requirements can be changed at any time by customers during the sprint cycle. The authors argue that the software development company never guarantees for the completion of all the user's requirements, but it may ready to add a client's feasible requirement immediately during the development process. Several diagrams are prepared during the designing phase of the agile model which is given as input to the coding phase to make a clear understanding of the flow of a software. Pressman (2001, p. 301) describes the entity relationship diagram which is used to show the relationship between data objects that related to each other. The author also explains that the data flow diagram shows the flow of data between data entities during the execution of the project (p. 302). For example, if the banking management system is being developed with the agile methodology than the bank manager, an account holder, and transaction are entities and the flow of data takes place between them during the execution of a system. Therefore, the diagram prepared in designing phase is utilized to construct data flow in different modules during the project development. In the last step of the design phase, a business analyst finalizes all requirements, estimate the number of iterations and the number of software developers required to complete the software development process.The second step used for software development process in agile methodology is codding.
	

